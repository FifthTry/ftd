[package]
name = "fastn-core"
version = "0.1.0"
authors = [
    "Abrar Khan <abrark@fifthtry.com>",
    "Amit Upadhyay <upadhyay@gmail.com>",
    "Arpita Jaiswal <arpita@fifthtry.com>",
]
edition = "2021"
description = "fastn: FTD Package Manager"
license = "MIT"
repository = "https://github.com/fastn-stack/fastn"
homepage = "https://fastn.io"

[features]
default = ["auth"]
# fastn comes with some feature to integrate with fastn controller. fastn controller is a
# separate software, optional. fastn controller is responsible for creating a new fastn
# package, and deploying it on some server, backing content up and so on. fastn has to
# speak with fastn controller, when fastn is managed by fastn controller. Enabling the
# "controller" feature enables that communication.
controller = ["remote"]

# fastn runs in local mode (to be used on your local laptop, or single use server), and in
# remote mode (to be used as a shared server for your entire team). The default is
# local mode.
#
# In local mode the editor acts like a local file editor, any changes done directly
# update the file. In remote mode, only sync can be called, and no direct edits are
# allowed. In future we will also have workspace mode, in which in remote a workspace
# is created for every user, and local edits in the workspace is allowed.
remote = []

auth = ["github-auth"]
github-auth = ["dep:oauth2"]

[dependencies]
# Please do not specify a dependency more precisely than needed. If version "1" works, do
# not specify "1.1.42". This reduces the number of total dependencies, as if you specify
# 1.1.42 and someone else who only needed "1" also specified 1.1.37, we end up having same
# dependency compiled twice.
#
# In future we may discover that our code does not indeed work with "1", say it ony works
# for 1.1 onwards, or 1.1.25 onwards, in which case use >= 1.1.25 etc. Saying our code
# only works for 1.1.42 and not 1.1.41 nor 1.1.43 is really weird, and most likely wrong.
#
# If you are not using the latest version intentionally, please do not list it in this section
# and create it's own [dependencies.<name>] section, and document it with why are you not
# using the latest dependency, and what is the plan.

actix-web.workspace = true
antidote.workspace = true
async-lock.workspace = true
async-recursion.workspace = true
camino.workspace = true
clap.workspace = true
colored.workspace = true
diffy.workspace = true
edit.workspace = true
env_logger.workspace = true
fluent.workspace = true
ftd = { path = "../ftd" }
futures.workspace = true
hyper.workspace = true
ignore.workspace = true
indoc.workspace = true
intl-memoizer.workspace = true
itertools.workspace = true
magic-crypt.workspace = true
mime_guess.workspace = true
notify.workspace = true
oauth2 = { workspace = true, optional = true }
once_cell.workspace = true
realm-lang.workspace = true
regex.workspace = true
reqwest.workspace = true
rusqlite.workspace = true
serde.workspace = true
serde_json.workspace = true
sha2.workspace = true
slug.workspace = true
thiserror.workspace = true
tokio.workspace = true
tracing-forest.workspace = true
tracing-subscriber.workspace = true
tracing.workspace = true
url.workspace = true
zip.workspace = true

#wit-bindgen-host-wasmtime-rust = { git = "https://github.com/bytecodealliance/wit-bindgen.git", rev = "45604f58336afaa23a79ed619ef50b69de473688" }
#fastn-utils = { git = "https://github.com/ftd-lang/fastn-utils", rev = "0ce396db408b413f5a4eb6b2c5b87db3829cf879" }
# fastn-utils = { path = "../fastn-utils/crates/fastn-utils-host"}



[dev-dependencies]
indoc.workspace = true
pretty_assertions.workspace = true
rusty-hook.workspace = true
fbt-lib.workspace = true
