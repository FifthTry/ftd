-- ds.page: Planned Changes In Next Edition

We have a bunch of backward incompatible changes that we want to make when
create our next edition. Currently we do not have edition support, so before we
implement these changes we have to add edition support as well.

;; add content here in reverse chronological fashion, latest content on the top
-- ds.h1: Default value for `fit` property set to `cover`

Context: https://github.com/fastn-stack/fastn/pull/1304#issuecomment-1727372364

-- ds.h1: Remove `classes`

-- ds.code:
lang: ftd

\-- ftd.text: hello
class: yo

-- ds.markdown:

Looks better than

-- ds.code:
lang: ftd

\-- ftd.text: hello
classes: yo

-- ds.markdown:

Most of the time we want to add a single attribute. We use singular name for
plural even for [text style](https://fastn.com/ftd/text-attributes/#style) and
[css](https://fastn.com/ftd/common/#css) etc.

We can not remove `classes` as it would break existing code, so we have to it on
next edition.

-- ds.h1: `ftd.color`

We should introduce `ftd.raw-color` and change the definition of `ftd.color` to
use `ftd.raw-color` instead of `string` as `light` and `dark`.

-- ds.h1: `ftd.image-src`

We should also have `ftd.raw-image-src` as the types of `light` and `dark`
instead of `string`.

-- ds.h1: `fastn` is `fastn serve`

PR: https://github.com/fastn-stack/fastn/pull/826.

-- ds.h1: `ftd.device`: `string -> or-type`

We currently use `string` to represent `ftd.device`. Our `or-type` is superior
and recommended way for modelling such enumerated constants.

-- ds.h1: `ftd.ui` -> `ui`

Every other built in type has no prefix, so why does `ui`? Also `children`,
which is and alias for `ftd.ui list` does not have `ftd.` prefix.

-- ds.h1: `ftd.color-scheme` related types

We have a few abbreviated names. We prefer longer/descriptive names.

- `ftd.btb -> ftd.body-text-border`
- `ftd.pst -> ftd.primary-secondary-tertiary`
- `ftd.custom -> ftd.custom-colors`

Long names are okay as these types are infrequently used.

-- end: ds.page
