-- ds.page: `fastn` app

`-- fastn.app` allows you to mount a fastn package at some url of your fastn package.

-- ds.code: FASTN.ftd
lang: ftd

\-- fastn.app: Auth App
mount-point: /-/auth/
package: lets-auth.fifthtry.site


-- ds.markdown:

The above snippet will mount contents of [lets-auth.fifthtry.site](https://lets-auth.fifthtry-community.com/) at the base url (`/-/auth/`) of your app.

Visiting `/-/auth/` will load `index.ftd` of lets-auth.fifthtry.site if it's available.

-- ds.h2: `ftd.app-url` function

This functions let's apps construct paths relative to their mountpoint. For
example, `lets-auth.fifthtry.site/index.ftd` could show a url to its signin
page (`lets-auth.fifthtry.site/signin.ftd`) using the following code:

-- ds.code: lets-auth.fifthtry.site/index.ftd
lang: ftd

\-- ftd.text: Sign In
link: $ftd.app-url(path = /signin/) \;; will become /-/auth/signin/

-- ds.markdown:

A second `app` parameter can be passed to `ftd.app-url` function to construct
urls for other mounted apps. Consider the following FASTN.ftd file:


-- ds.code: FASTN.ftd
lang: ftd

    \-- import: fastn

    \-- fastn.package: lets-auth-template.fifthtry.site

    \-- fastn.dependency: design-system.fifthtry.site
    \-- fastn.dependency: lets-auth.fifthtry.site
    provided-via: lets-auth-template.fifthtry.site/lets-auth

    \-- fastn.auto-import: lets-auth-template.fifthtry.site/lets-auth

    \-- fastn.app: Auth App
    mount-point: /-/auth/
    package: lets-auth.fifthtry.site

    \-- fastn.app: Design App
    mount-point: /-/design-system/
    package: design-system.fifthtry.site

-- ds.markdown:

A file in `lets-auth.fifthtry.site` can construct a path that is relative to the mountpoint of "Design App" like the following:

-- ds.code: lets-auth.fifthtry.site/index.ftd
lang: ftd

    \-- ftd.text: Go to design system docs homepage
    link: $ftd.app-url(path = /docs/, app = ds) ;; `ds` is the system name of design-system.fifthtry.site

-- end: ds.page
