;; require fastn built using --features auth flag
;; FASTN_DB_URL, FASTN_ENABLE_AUTH must be set
-- import: fastn

-- fastn.test: create user

-- fastn.post: Create user with insufficient data should fail
url: /-/auth/create-user/
body: {"username": "siddhant"}

-- fastn.post.test:

fastn.assert.not_empty(fastn.http_response.errors.payload);

-- fastn.post: Create user with invalid data
url: /-/auth/create-user/?next=/hello/
body: {"name": "John", "email": "john@mail.com", "password": "testpasswd", "username": "john"}


-- fastn.post.test:

fastn.assert.eq(fastn.http_response.success, false);
fastn.assert.not_empty(fastn.http_response.errors.password);


-- fastn.post: Create user with valid data
url: /-/auth/create-user/?next=/hello/
body: {"name": "John", "email": "john@mail.com", "password": "john the don", "username": "john"}


-- fastn.post.test:

fastn.assert.eq(fastn.http_response.user.username, "john");


-- fastn.post: Create user with same data should result in an error
url: /-/auth/create-user/?next=/hello/
body: {"name": "John", "email": "john@mail.com", "password": "john the don", "username": "john"}


-- fastn.post.test:

fastn.assert.not_empty(fastn.http_response.errors.username);


-- fastn.post: login with insufficient data should error
url: /-/auth/login/?provider=email-password
body: {"username": "someone"}

-- fastn.post.test:

fastn.assert.not_empty(fastn.http_response.errors.payload);


-- fastn.post: login with invalid user shouldn't work
url: /-/auth/login/?provider=email-password
body: {"username": "someone", "password": "veryrealpasswd"}

-- fastn.post.test:

fastn.assert.not_empty(fastn.http_response.errors.username);


-- fastn.post: login with valid user but wrong password
url: /-/auth/login/?provider=email-password
body: {"username": "john", "password": "veryrealpasswd"}

-- fastn.post.test:

fastn.assert.not_empty(fastn.http_response.errors.password);


-- fastn.post: login with valid but unverfied user
url: /-/auth/login/?provider=email-password&next=/hello/
body: {"username": "john", "password": "john the don"}

-- fastn.post.test:

fastn.assert.not_empty(fastn.http_response.errors.username);

;; TODO: verify user
;; TODO: resend email
;; TODO: successfull login
;; TODO: logout

;;-- fastn.post: logout on logged in user
;;-- fastn.post: logout with no session

